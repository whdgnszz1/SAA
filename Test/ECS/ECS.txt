한 회사가 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 해당 애플리케이션을 AWS로 이전하기로 결정했습니다.
배포된 직후 애플리케이션에는 수천 명의 사용자가 있게 됩니다. 회사는 대규모 컨테이너 배포를 관리하는 방법을 확신하지 못합니다. 
회사는 운영 오버헤드를 최소화하는 고가용성 아키텍처에 컨테이너화된 애플리케이션을 배포해야 합니다.
어떤 솔루션이 이러한 요구 사항을 충족합니까?

A. Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 컨테이너 이미지를 저장합니다. 
AWS Fargate 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 
수요에 따라 자동으로 규모를 조정하려면 대상 추적을 사용하세요.
B. Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 컨테이너 이미지를 저장합니다. 
Amazon EC2 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 
수요에 따라 자동으로 규모를 조정하려면 대상 추적을 사용하세요.
C. Amazon EC2 인스턴스에서 실행되는 리포지토리에 컨테이너 이미지를 저장합니다. 
여러 가용 영역에 분산되어 있는 EC2 인스턴스에서 컨테이너를 실행하세요. 
Amazon CloudWatch에서 평균 CPU 사용률을 모니터링합니다. 필요에 따라 새 EC2 인스턴스 시작
D. 컨테이너 이미지가 포함된 Amazon EC2 Amazon 머신 이미지(AMI)를 생성합니다. 
여러 가용 영역에 걸쳐 Auto Scaling 그룹에서 EC2 인스턴스를 시작합니다. 
평균 CPU 사용률 임계값이 위반되면 Amazon CloudWatch 경보를 사용하여 EC2 인스턴스를 확장합니다. 

정답: A. Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 컨테이너 이미지를 저장합니다. AWS Fargate 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 수요에 따라 자동으로 규모를 조정하려면 대상 추적을 사용하세요.

주요 키워드 설명:
Amazon Elastic Container Registry (Amazon ECR): Amazon ECR은 Docker 컨테이너 이미지를 쉽게 저장, 관리, 배포할 수 있는 완전 관리형 Docker 컨테이너 레지스트리입니다.

AWS Fargate: AWS Fargate는 Amazon ECS와 Amazon Elastic Kubernetes Service(Amazon EKS)와 함께 사용할 수 있는 서버리스 컴퓨트 엔진으로, 서버를 프로비저닝하거나 관리할 필요 없이 컨테이너를 실행할 수 있게 해줍니다.

Amazon Elastic Container Service (Amazon ECS): Amazon ECS는 컨테이너화된 애플리케이션을 쉽게 실행, 중지 및 관리할 수 있는 완전 관리형 컨테이너 오케스트레이션 서비스입니다.

솔루션의 이점:
AWS Fargate를 사용하면, 서버를 관리할 필요 없이 컨테이너를 실행할 수 있으므로 운영 오버헤드가 크게 줄어듭니다.

대상 추적을 사용하여 자동 규모 조정을 구성하면, 애플리케이션의 수요에 따라 자동으로 컨테이너 인스턴스의 규모를 조정할 수 있어, 사용자 수가 수천 명에 달하는 대규모 배포를 효율적으로 관리할 수 있습니다.

왜 다른 옵션들은 적합하지 않은가?
B, C, D 옵션: 이 옵션들은 AWS Fargate의 서버리스 이점을 활용하지 못하며, EC2 인스턴스를 직접 관리하거나 EC2 인스턴스에 대한 추가 설정이 필요합니다. 
이러한 접근 방식은 운영 오버헤드를 증가시킬 수 있습니다.

A 옵션은 컨테이너화된 애플리케이션을 AWS로 이전하면서 고가용성을 제공하고 운영 오버헤드를 최소화하는 최적의 솔루션을 제공합니다.