NO.83 A company has launched an Amazon RDS for MySQL D6 instance 
Most of the connections to the database come from serverless applications. 
Application traffic to the database changes significantly at random intervals At limes of high demand, 
users report that their applications experience database connection rejection errors.
Which solution will resolve this issue with the LEAST operational overhead?

A. Create a proxy in RDS Proxy Configure the users' applications to use the DB instance through RDS Proxy
B. Deploy Amazon ElastCache for Memcached between the users' application and the DB instance

C. Migrate the DB instance to a different instance class that has higher I/O capacity. 
Configure the users' applications to use the new DB instance.

D. Configure Multi-AZ for the DB instance Configure the users' application to switch between the DB instances.

Answer: A
Explanation:
Many applications, including those built on modern serverless architectures, 
can have a large number of open connections to the database server 
and may open and close database connections at a high rate, 
exhausting database memory and compute resources. 
Amazon RDS Proxy allows applications to pool and share connections established with the database, 
improving database efficiency and application scalability.
(https://aws.amazon.com/pt/rds/proxy/)