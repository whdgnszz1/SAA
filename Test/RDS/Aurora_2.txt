NO.127 A company runs an on-premises application that is powered by a MySQL database 
The company is migrating the application to AWS to Increase the application's elasticity and availability 
The current architecture shows heavy read activity on the database 
during times of normal operation Every 4 hours 
the company's development team pulls a full export of the production database 
to populate a database in the staging environment 
During this period, users experience unacceptable application latency 
The development team is unable to use the staging environment until the procedure completes 
A solutions architect must recommend replacement architecture 
that alleviates the application latency issue 
The replacement architecture also must give the development team 
the ability to continue using the staging environment without delay Which solution meets these requirements?

A. Use Amazon Aurora MySQL with Multi-AZ Aurora Replicas for production. 
Populate the staging database by implementing a backup and restore process that uses the mysqldump utility.

B. Use Amazon Aurora MySQL with Multi-AZ Aurora Replicas for production 
Use database cloning to create the staging database on-demand

C. Use Amazon RDS for MySQL with a Mufti AZ deployment and read replicas for production 
Use the standby instance tor the staging database.

D. Use Amazon RDS for MySQL with a Multi-AZ deployment and read replicas for production. 
Populate the staging database by implementing a backup and restore process that uses the mysqldump utility.

회사가 온프레미스 애플리케이션을 AWS로 이전하여 애플리케이션의 탄력성과 가용성을 높이고 있습니다. 
이 애플리케이션은 MySQL 데이터베이스를 사용하며, 정상적인 운영 시간 동안 데이터베이스에 대한 읽기 작업이 많습니다. 
매 4시간마다, 회사의 개발 팀은 생산 데이터베이스를 내보내 스테이징 환경의 데이터베이스를 채우는 작업을 수행하는데, 
이 과정에서 애플리케이션의 지연 시간이 발생하고 스테이징 환경 사용에 지연이 생깁니다.

선택된 솔루션:
B. Amazon Aurora MySQL을 사용하여 프로덕션용으로 Multi-AZ Aurora Replicas를 구성하고, 
데이터베이스 클론을 사용하여 스테이징 데이터베이스를 즉석에서 생성합니다.

핵심 개념 설명:
Amazon Aurora MySQL: MySQL과 호환되는 완전 관리형 관계형 데이터베이스 엔진으로, 
대부분의 MySQL 애플리케이션에 변경을 거의 하지 않고도 MySQL의 최대 5배까지 성능을 제공합니다. 
Aurora는 Multi-AZ 배포와 Aurora Replicas를 통해 높은 가용성과 내구성을 제공합니다.

Multi-AZ Aurora Replicas: 데이터베이스(DB) 인스턴스의 가용성과 내구성을 향상시켜 주므로, 프로덕션 워크로드에 적합합니다. 
여러 가용 영역에서 DB 인스턴스를 운영할 수 있게 하여, 수동 개입 없이도 높은 가용성과 장애 조치 기능을 제공합니다.

데이터베이스 클론: Aurora의 데이터베이스 클론 기능을 통해 데이터베이스의 클론을 신속하고 비용 효과적으로 생성할 수 있습니다. 
클론은 독립적으로 사용할 수 있는 데이터베이스의 전체 복사본입니다. 
이 기능은 프로덕션 데이터베이스에 영향을 주지 않으면서 스테이징 환경, 테스트 및 개발을 위해 특히 유용합니다.

솔루션의 장점:
이 솔루션은 현재 아키텍처와 관련된 애플리케이션 지연 시간 문제를 제거하고 개발 팀이 지연 없이 스테이징 환경을 사용할 수 있도록 합니다. 
Amazon Aurora MySQL 및 데이터베이스 클론 기능을 사용함으로써, 회사는 다음과 같은 이점을 얻을 수 있습니다:

데이터를 내보내고 가져오는 긴 과정 없이 즉시 스테이징 환경을 위한 프로덕션 데이터베이스의 클론을 생성할 수 있습니다.
Aurora의 아키텍처와 Multi-AZ Aurora Replicas 덕분에 클론 작업 중에도 프로덕션 데이터베이스의 가용성과 성능을 유지할 수 있습니다.
클론은 프로덕션 데이터베이스와 독립적이며 컴퓨팅 리소스를 공유하지 않아 프로덕션 환경의 성능에 영향을 주지 않습니다.

다른 옵션들이 덜 적합한 이유:
A, C, D: 이 옵션들은 mysqldump 유틸리티를 사용한 백업 및 복원 프로세스를 구현하거나 
스테이징 데이터베이스를 위해 대기 인스턴스를 사용하는 것을 포함하는데, 
이는 시간이 오래 걸리고 애플리케이션 지연 시간 문제를 해결하지 못할 수 있습니다. 
또한 즉시 사용 가능한 클론 기능을 제공하는 Aurora와 같은 즉시, 
즉석에서 클론을 생성할 수 있는 기능을 제공하지 않아 개발 팀이 스테이징 환경에 접근하는 데 지연이 발생할 수 있습니다.