NO.81 A company has a small Python application that processes JSON documents 
and outputs the results to an on-premises SQL database. 
The application runs thousands of times each day. 
The company wants to move the application to the AWS Cloud. 
The company needs a highly available solution that maximizes scalability and minimizes operational overhead.
Which solution will meet these requirements?

A. Place the JSON documents in an Amazon S3 bucket. Run the Python code on multiple Amazon EC2 instances to process the documents. Store the results in an Amazon Aurora DB cluster
B. Place the JSON documents in an Amazon S3 bucket. Create an AWS Lambda function that runs the Python code to process the documents as they arrive in the S3 bucket. Store the results in an Amazon Aurora DB cluster.
C. Place the JSON documents in an Amazon Elastic Block Store (Amazon EBS) volume. Use the EBS Multi-Attach feature to attach the volume to multiple Amazon EC2 instances. Run the Python code on the EC2 instances to process the documents. Store the results on an Amazon RDS DB instance.
D. Place the JSON documents in an Amazon Simple Queue Service (Amazon SQS) queue as messages Deploy the Python code as a container on an Amazon Elastic Container Service (Amazon ECS) cluster that is configured with the Amazon EC2 launch type. Use the container to process the SQS messages.Store the results on an Amazon RDS DB instance.

Answer: B
Explanation:
By placing the JSON documents in an S3 bucket, 
the documents will be stored in a highly durable and scalable object storage service. 

The use of AWS Lambda allows the company to run their Python code to process the documents 
as they arrive in the S3 bucket without having to worry about the underlying infrastructure. 

This also allows for horizontal scalability, as AWS Lambda will automatically scale the number of instances of the function 
based on the incoming rate of requests. 

The results can be stored in an Amazon Aurora DB cluster, which is a fully-managed, high-performance database service 
that is compatible with MySQL and PostgreSQL. 

This will provide the necessary durability and scalability for the results of the processing.
https://aws.amazon.com/rds/aurora/