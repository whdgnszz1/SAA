NO.98 A social media company wants to allow its users to upload images in an application 
that is hosted in the AWS Cloud. 
The company needs a solution that automatically resizes the images 
so that the images can be displayed on multiple device types. 
The application experiences unpredictable traffic patterns throughout the day. 
The company is seeking a highly available solution that maximizes scalability.
What should a solutions architect do to meet these requirements?

A. Create a static website hosted in Amazon S3 
that invokes AWS Lambda functions to resize the images 
and store the images in an Amazon S3 bucket.

B. Create a static website hosted in Amazon CloudFront 
that invokes AWS Step Functions to resize the images 
and store the images in an Amazon RDS database.

C. Create a dynamic website hosted on a web server 
that runs on an Amazon EC2 instance 
Configure a process that runs on the EC2 instance to resize the images 
and store the images in an Amazon S3 bucket.

D. Create a dynamic website hosted on an automatically scaling Amazon Elastic Container Service (Amazon ECS) cluster 
that creates a resize job in Amazon Simple Queue Service (Amazon SQS). 
Set up an image-resizing program that runs on an Amazon EC2 instance to process the resize jobs

Answer: A
Explanation:
By using Amazon S3 and AWS Lambda together, 
you can create a serverless architecture 
that provides highly scalable and available image resizing capabilities. 

Here's how the solution would work: 
Set up an Amazon S3 bucket to store the original images uploaded by users. 
Configure an event trigger on the S3 bucket to invoke an AWS Lambda function whenever a new image is uploaded. 
The Lambda function can be designed to retrieve the uploaded image, 
perform the necessary resizing operations based on device requirements, 
and store the resized images back in the S3 bucket or a different bucket designated for resized images. 
Configure the Amazon S3 bucket to make the resized images publicly accessible for serving to users.