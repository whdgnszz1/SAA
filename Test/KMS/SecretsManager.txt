
한 회사에서 Amazon Aurora MySQL DB 클러스터를 저장용으로 사용하는 다중 계층 웹 애플리케이션을 호스팅하고 있습니다. 
애플리케이션 계층은 Amazon EC2 인스턴스에서 호스팅됩니다. 회사의 IT 보안 지침에 따르면 데이터베이스 자격 증명은 14일마다 암호화되고 교체되어야 합니다. 
최소한의 운영 노력으로 이 요구 사항을 충족하려면 솔루션 설계자가 무엇을 해야 합니까?

A. 새 AWS Key Management Service(AWS KMS) 암호화 키 생성 AWS Secrets Manager를 사용하여 적절한 자격 증명과 함께 KMS 키를 사용하는 새 비밀을 생성합니다. 
비밀을 Aurora DB 클러스터와 연결합니다. 사용자 지정 교체 기간을 14로 구성합니다.
B. AWS Systems Manager Parameter Store에서 두 개의 매개변수를 생성합니다. 
하나는 문자열 매개변수인 사용자 이름용이고 다른 하나는 비밀번호용으로 SecureStnng 유형을 사용합니다. 
비밀번호 매개변수로 AWS Key Management Service(AWS KMS) 암호화를 선택하고 이를 로드합니다. 
애플리케이션 계층의 매개변수 14일마다 암호를 교체하는 AWS Lambda 함수를 구현합니다.
C. AWS KMS(AWS Key Management Service) 암호화 Amazon Elastic File System(Amazon EFS) 파일 시스템에 자격 증명이 포함된 파일을 저장합니다. 
애플리케이션 계층의 모든 EC2 인스턴스에 EFS 파일 시스템을 탑재합니다. 
애플리케이션이 파일을 읽을 수 있고 슈퍼 사용자만 파일을 수정할 수 있도록 파일 시스템의 파일에 대한 액세스를 제한합니다. 
14일마다 Aurora에서 키를 교체하고 파일에 새 자격 증명을 쓰는 AWS Lambda 함수를 구현합니다.
D. 애플리케이션이 자격 증명을 로드하는 데 사용하는 AWS Key Management Service(AWS KMS) 암호화 Amazon S3 버킷에 자격 증명이 포함된 파일을 저장합니다. 
올바른 자격 증명이 사용되도록 정기적으로 애플리케이션에 파일을 다운로드합니다. 
14일마다 Aurora 자격 증명을 교체하고 이러한 자격 증명을 S3 버킷의 파일에 업로드하는 AWS Lambda 함수를 사용합니다.

A. 새 AWS Key Management Service(AWS KMS) 암호화 키 생성 AWS Secrets Manager를 사용하여 적절한 자격 증명과 함께 KMS 키를 사용하는 새 비밀을 생성합니다. 비밀을 Aurora DB 클러스터와 연결합니다. 사용자 지정 교체 기간을 14일로 구성합니다.
주요 키워드 설명:

AWS Key Management Service (AWS KMS): AWS KMS는 암호화 키를 생성하고 관리하는데 사용되는 서비스로, 데이터 암호화 및 암호 해독 작업을 위한 관리형 서비스입니다.

AWS Secrets Manager: AWS Secrets Manager는 애플리케이션의 비밀을 안전하게 저장하고, 이를 애플리케이션에 자동으로 교체하여 제공하는 서비스입니다. 이 서비스는 비밀의 자동 교체를 지원하여 보안을 강화합니다.

솔루션의 이점:
AWS Secrets Manager를 사용하면, 데이터베이스 자격 증명을 안전하게 저장하고, 14일마다 자동으로 교체할 수 있습니다. 이는 IT 보안 지침을 준수하면서 운영 노력을 최소화합니다.

KMS 암호화 키와 함께 사용하면, 자격 증명의 안전한 암호화를 보장하고, 데이터 보안을 강화할 수 있습니다.

왜 다른 옵션들은 적합하지 않은가?
B, C, D 옵션: 이 옵션들은 AWS Secrets Manager의 자동 교체 기능을 활용하지 않으며, 
운영 노력을 더 많이 요구하거나 데이터 보안을 최적화하는데 있어서 AWS Secrets Manager만큼 효과적이지 않습니다.
정답 A는 Amazon Aurora MySQL DB 클러스터 사용 시 데이터베이스 자격 증명의 보안 유지와 자동 교체를 위한 가장 효과적이고 운영적으로 효율적인 솔루션을 제공합니다.