NO.52 A solutions architect is developing a multiple-subnet VPC architecture. 
The solution will consist of six subnets in two Availability Zones. 
The subnets are defined as public, private and dedicated for databases. 
Only the Amazon EC2 instances running in the private subnets should be able to access a database.
Which solution meets these requirements?

A. Create a now route table that excludes the route to the public subnets' CIDR blocks. 
Associate the route table to the database subnets.
B. Create a security group that denies ingress from the security group used by instances in the public subnets. 
Attach the security group to an Amazon RDS DB instance.
C. Create a security group that allows ingress from the security group used by instances in the private subnets. 
Attach the security group to an Amazon RDS DB instance.
D. Create a new peering connection between the public subnets and the private subnets. 
Create a different peering connection between the private subnets and the database subnets.

Answer: C
Explanation:
Security groups are stateful. All inbound traffic is blocked by default. 
If you create an inbound rule allowing traffic in, that traffic is automatically allowed back out again. 
You cannot block specific IP address using Security groups (instead use Network Access Control Lists).
"You can specify allow rules, but not deny rules." 
"When you first create a security group, it has no inbound rules. 
Therefore, no inbound traffic originating from another host to your instance is allowed 
until you add inbound rules to the security group." 
Source: https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#VPCSecurityGroups

솔루션 아키텍트는 여러 서브넷을 갖는 VPC 아키텍처를 개발하고 있습니다. 
이 솔루션은 두 개의 가용 영역에 걸쳐 정의된 공용, 사설, 데이터베이스 전용의 여섯 개 서브넷으로 구성됩니다. 
사설 서브넷에서 실행 중인 Amazon EC2 인스턴스만 데이터베이스에 접근할 수 있어야 합니다.

주요 키워드 설명:
보안 그룹: AWS에서 인스턴스로의 인바운드 및 아웃바운드 트래픽을 제어하는 가상 방화벽입니다. 
보안 그룹은 상태 유지성이며, 기본적으로 모든 인바운드 트래픽을 차단하고, 모든 아웃바운드 트래픽을 허용합니다. 인바운드 규칙을 통해 특정 트래픽을 허용할 수 있습니다.

솔루션의 이점:
C 옵션을 통해, 사설 서브넷에서 실행 중인 인스턴스만 데이터베이스에 접근할 수 있도록 제한할 수 있습니다. 
이는 데이터베이스를 보호하고, 불필요한 접근을 방지하는 효과적인 방법입니다.

왜 다른 옵션들은 적합하지 않은가?
A 옵션: 라우트 테이블을 사용하여 공용 서브넷의 CIDR 블록으로의 라우트를 제외하는 것은, 데이터베이스 서브넷의 접근 제어와는 관련이 없습니다.

B 옵션: 보안 그룹은 거부 규칙을 설정할 수 없으며, 기본적으로 모든 인바운드 트래픽을 차단합니다. 따라서 공용 서브넷의 인스턴스를 사용하는 보안 그룹으로부터 인그레스를 거부하는 보안 그룹을 생성하는 것은 불가능합니다.

D 옵션: 피어링 연결을 생성하는 것은 서브넷 간의 네트워크 트래픽 흐름을 제어하는 방법이지만, 특정 인스턴스로의 접근 제어를 위한 보안 그룹과는 다릅니다.

결론적으로, C 옵션은 사설 서브넷에서 실행 중인 인스턴스만 데이터베이스에 접근할 수 있도록 하는 가장 효과적인 방법을 제공합니다. 이는 데이터베이스의 보안을 강화하고 운영상의 부담을 최소화하는 솔루션입니다.