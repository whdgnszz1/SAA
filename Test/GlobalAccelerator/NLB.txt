한 회사가 단일 AWS 리전에서 모바일 게임 앱을 개발하고 있습니다. 앱은 Auto Scaling 그룹의 여러 Amazon EC2 인스턴스에서 실행됩니다. 
회사는 앱 데이터를 Amazon DynamoDB에 저장합니다. 앱은 사용자와 서버 간의 TCP 트래픽과 UDP 트래픽을 사용하여 통신합니다. 응용 프로그램은 전 세계적으로 사용됩니다. 
회사는 모든 사용자에 대해 가능한 가장 낮은 대기 시간을 보장하려고 합니다.
어떤 솔루션이 이러한 요구 사항을 충족합니까?

A. AWS Global Accelerator를 사용하여 액셀러레이터를 생성합니다. Global Accelerator 통합을 사용하고 
TCP 및 UDP 포트에서 수신 대기하는 가속기 엔드포인트 뒤에 ALB(Application Load Balancer)를 생성합니다. ALB에 인스턴스를 등록하려면 Auto Scaling 그룹을 업데이트하세요.
B. AWS Global Accelerator를 사용하여 액셀러레이터를 생성합니다. Global Accelerator 통합을 사용하고 
TCP 및 UDP 포트에서 수신 대기하는 가속기 엔드포인트 뒤에 NLB(Network Load Balancer)를 생성합니다. NLB에 인스턴스를 등록하도록 Auto Scaling 그룹을 업데이트합니다.
C. Amazon CloudFront 콘텐츠 전송 네트워크(CDN) 엔드포인트를 생성합니다. 
엔드포인트 뒤에 NLB(Network Load Balancer)를 생성하고 TCP 및 UDP 포트를 수신합니다. 
NLB에 인스턴스를 등록하려면 Auto Scaling 그룹을 업데이트하세요. NLB를 오리진으로 사용하도록 CloudFront를 업데이트합니다.
D. Amazon Cloudfront 콘텐츠 전송 네트워크(CDN) 엔드포인트를 생성합니다. 
엔드포인트 뒤에 ALB(Application Load Balancer)를 생성하고 TCP 및 UDP 포트를 수신합니다. 
ALB에 인스턴스를 등록하려면 Auto Scaling 그룹을 업데이트하세요. ALB를 오리진으로 사용하도록 CloudFront 업데이트


정답: B. AWS Global Accelerator를 사용하여 액셀러레이터를 생성합니다. 
Global Accelerator 통합을 사용하고 TCP 및 UDP 포트에서 수신 대기하는 가속기 엔드포인트 뒤에 NLB(Network Load Balancer)를 생성합니다. 
NLB에 인스턴스를 등록하도록 Auto Scaling 그룹을 업데이트합니다.

주요 키워드 설명:
AWS Global Accelerator: AWS의 글로벌 네트워크를 사용하여 사용자 트래픽을 최적의 엔드포인트로 라우팅하고, 성능과 가용성을 향상시키는 네트워킹 서비스입니다. 
Global Accelerator는 TCP 및 UDP 프로토콜을 모두 지원하며, 애플리케이션에 고정된 진입점 역할을 하는 정적 IP 주소를 제공합니다.

NLB(Network Load Balancer): 고성능의 로드 밸런서로, 수백만 개의 요청을 초당 처리할 수 있으며, TCP 및 UDP 트래픽 모두를 지원합니다. 
NLB는 대기 시간을 최소화하고 애플리케이션의 확장성을 극대화하는 데 도움이 됩니다.

솔루션의 이점:
낮은 대기 시간: AWS Global Accelerator와 NLB를 사용하면 전 세계 사용자에게 최적의 경로를 통해 트래픽을 라우팅함으로써, 애플리케이션의 대기 시간을 최소화할 수 있습니다.

UDP 지원: 이 조합은 UDP 트래픽을 지원하므로, TCP와 UDP를 모두 사용하는 모바일 게임 앱에 적합합니다.

확장성과 탄력성: Auto Scaling 그룹과 NLB를 사용하면 트래픽의 증가에 따라 자동으로 EC2 인스턴스를 확장하고, 가용성을 높일 수 있습니다.

왜 다른 옵션들은 적합하지 않은가?
A, C, D 옵션: 이 옵션들은 UDP 트래픽을 지원하지 않거나, Global Accelerator와 NLB의 조합만큼 효과적으로 전 세계 사용자의 대기 시간을 최소화하지 못합니다.
결론적으로, B 옵션은 모바일 게임 앱의 요구 사항을 충족하고, 전 세계 사용자에게 최적의 성능을 제공하는 가장 적합한 솔루션입니다.