한 기상 스타트업 회사는 사용자에게 온라인으로 날씨 데이터를 판매하는 맞춤형 웹 애플리케이션을 보유하고 있습니다. 
이 회사는 Amazon DynamoDB를 사용하여 데이터를 저장하고 새로운 기상 현상이 기록될 때마다 4개의 내부 팀 관리자에게 알림을 보내는 새로운 서비스를 구축하려고 합니다. 
회사는 현재 애플리케이션의 성능에 영향을 미치는 진정한 새로운 서비스를 원하지 않습니다. 솔루션 설계자는 최소한의 운영 오버헤드로 이러한 요구 사항을 충족하려면 어떻게 해야 합니까?

A. DynamoDB 트랜잭션을 사용하여 테이블에 새 이벤트 데이터를 씁니다. 내부 팀에 알리도록 트랜잭션을 구성합니다.
B. 현재 애플리케이션이 4개의 Amazon Simple 알림 서비스(Amazon SNS) 주제에 메시지를 게시하도록 합니다. 각 팀이 하나의 주제를 구독하게 합니다.
C. 테이블에서 Amazon DynamoDB 스트림을 활성화합니다. 트리거를 사용하여 팀이 구독할 수 있는 혼합 Amazon Simple 알림 서비스(Amazon SNS) 주제에 글을 쓰세요.
D. 새 항목에 플래그를 지정하려면 각 레코드에 사용자 정의 속성을 추가합니다. 매분마다 테이블에서 새로운 항목을 검색하고 팀이 구독할 수 있는 Amazon Simple Queue Service(Amazon SOS) 대기열에 알리는 크론 작업을 작성합니다.


정답: C. 테이블에서 Amazon DynamoDB 스트림을 활성화합니다. 트리거를 사용하여 팀이 구독할 수 있는 혼합 Amazon Simple 알림 서비스(Amazon SNS) 주제에 글을 씁니다.
주요 키워드 설명:
Amazon DynamoDB 스트림: DynamoDB 스트림은 DynamoDB 테이블에서 발생하는 변경 사항(항목 추가, 업데이트, 삭제)을 실시간으로 캡처하는 기능입니다. 
이 스트림은 애플리케이션에 변경 사항을 반응적으로 처리할 수 있는 기능을 제공합니다.

Amazon Simple Notification Service (Amazon SNS): SNS는 고도로 확장 가능한 메시지 알림 서비스로, 애플리케이션에서 푸시 방식의 메시지를 구독자에게 전송할 수 있게 합니다. 
SNS 주제에 메시지를 발행하면 구독한 엔드포인트(이메일, SMS, Lambda 함수 등)에 자동으로 알림이 전송됩니다.

솔루션의 이점:
최소한의 운영 오버헤드: DynamoDB 스트림과 SNS를 사용하면 복잡한 인프라를 관리하거나 추가 서버를 운영할 필요 없이 애플리케이션의 성능에 영향을 주지 않고도 변경 사항을 효율적으로 처리할 수 있습니다.

실시간 알림: 새로운 기상 현상 데이터가 DynamoDB 테이블에 추가될 때마다, 스트림이 이 변경 사항을 캡처하고 관련된 SNS 주제에 알림을 발행하여 내부 팀 관리자에게 즉각적으로 알림을 보낼 수 있습니다.

확장성: SNS 주제를 사용하면 알림을 받을 수신자를 쉽게 추가하거나 변경할 수 있으며, 시스템의 확장성을 보장합니다.

왜 다른 옵션들은 적합하지 않은가?
A 옵션: DynamoDB 트랜잭션은 데이터 일관성을 보장하지만, 내부 팀에 알림을 보내는 기능을 직접 제공하지는 않습니다.

B 옵션: SNS 주제에 직접 메시지를 게시하는 것은 가능하지만, 실시간 데이터 변경 사항에 반응하는 자동화된 방법을 제공하지는 않습니다.

D 옵션: 크론 작업과 SQS 대기열을 사용하는 것은 주기적인 폴링이 필요하고, 이는 추가적인 인프라 관리와 비용이 발생하며, 실시간 처리에 비해 효율적이지 않습니다.

C 옵션은 DynamoDB 스트림과 SNS를 결합하여 실시간으로 데이터 변경 사항을 감지하고 이에 따라 알림을 자동으로 발송하는 효율적이고 확장 가능한 솔루션을 제공합니다.